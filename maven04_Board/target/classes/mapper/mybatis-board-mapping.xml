<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ns.sql.Board">
	<!-- 게시글 등록..no는 자동완성..bard..id(member의 컬럼) -->
	<!-- useGeneratedKeys 자동으로 증가. 
		  게시글 입력할때 디비에서 자동으로 값을 증가시켜라. keyProperty="no" 증가된 값이 no
		 board.setNo().. 여기서 자동 증가된 no가 board에 주입
		 결과적으로 pvo와 디비의 rvo 동기화가 진행됨 (pk가 자동증가 되는 경우 이 방식으로 함)
	-->
	<insert id="write" parameterType="board" useGeneratedKeys="true" keyProperty="no">
		INSERT
		INTO springboard (title, content, w_date, id)
		VALUES (#{title}, #{content}, curdate(), #{member.id})
	</insert>

	<!-- 특정 게시글이 입력된 날짜를 디비에서 받아오는 쿼리문.. -->
	<select id="selectByNoForDate" parameterType="int" resultType="string">
		SELECT
		w_date
		FROM springboard
		WHERE no=#{VALUE}
	</select>
	
	<!-- 전체 게시물 목록 -->
	<resultMap id="boardListRM" type="board">
		<id property="no" column="no" />
		<result property="title" column="title" />
		<result property="count" column="count" />
		<result property="writeDate" column="w_date" />
		<association property="member" javaType="member">
			<id property="id" column="id" />
			<result property="name" column="name" />
			<result property="password" column="password" />
			<result property="address" column="address" />
		</association>
	</resultMap>
	
	<!-- 전체 게시물 보기 -->
	<!-- 게시물목록에서 나와야할 컬럼 -->
	<select id="getBoardList" resultMap="boardListRM">
		SELECT
		b.no, b.title, b.count, b.w_date, m.name
		FROM springboard b, member m
		WHERE b.id = m.id
		ORDER BY no DESC
	</select>
	
	<!-- 게시물 상세 -->
	<resultMap type="board" id="boardRM" extends="boardListRM">
		<result property="content" column="content" />
		<result property="member.id" column="id" /> <!-- member의 id -->
	</resultMap>
	
	<!-- 특정 게시글 상세보기 :: content, id -->
	<select id="showContent" resultMap="boardRM" parameterType="int">
		SELECT 
		b.no, b.title, b.count, b.w_date, b.content, m.id, m.name
		FROM springboard b, member m
		WHERE b.id = m.id
		AND
		b.no=#{VALUE}
		ORDER BY no DESC
	</select> 
	
	<delete id="deleteBoard" parameterType="int">	
		DELETE FROM springboard WHERE no=#{VALUE}
	</delete>
	<update id="updateCount" parameterType="int">
		UPDATE springboard SET count = count+1 WHERE no=#{VALUE}	
	</update> 
	<update id="updateBoard" parameterType="board">
		UPDATE springboard SET title=#{title}, content=#{content}
		WHERE no=#{no}
	</update>
</mapper>

