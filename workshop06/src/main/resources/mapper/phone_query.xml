<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="ns.sql.Phone">
	<insert id="insert" parameterType="phone">
	INSERT INTO 
	phones (num, model, price, vcode)
	VALUES (#{num}, #{model}, #{price}, #{vcode})
	</insert>	
	
	<!-- id, result, association태그의 결합 -->
	<resultMap type="phone" id="phoneWithCompany">
		<id property="num" column="num" />
		<result property="model" column="model" />
		<result property="price" column="price" />
		<result property="vcode" column="vcode" />
		<association property="company" javaType="company">
			<id property="vcode" column="vcode"/>
			<result property="vendor" column="vendor"/>
		</association>
	</resultMap>
	
	<!--  동적쿼리 :: 모든 폰 조회하기 & 특정 폰 조회하기 :: selectList() & selectOne() -->
	<select id="select" parameterType="phone" resultMap="phoneWithCompany"><!-- join문 사용 -->
<!-- 		SELECT
		p.num, p.model, p.price, c.vendor, c.vendor
		FROM phones p, company c
		<where>
		 p.vcode = c.vcode
		 <if test="num != null">
		 	AND p.num = #{num}
		 </if>
		</where> -->
		
		SELECT
		p.num, p.model, p.price, c.vendor, c.vendor
		FROM phones p
		JOIN company c
		ON (p.vcode = c.vcode)
		<if test="num != null">
		 	AND p.num = #{num}
		</if>
	</select>
	
	<!--  동적쿼리 :: 로그인 기능과 특정고객 찾는 기능 -->
	<!-- pw가 null아닐때 로그인기능으로감 -->
	<select id="selectUser" parameterType="userInfo" resultType="userInfo">
		SELECT
		id, pw
		FROM userinfo
		WHERE id=#{id}
		<if test="pw!=null">
			AND pw=#{pw}
		</if>
	</select>
	
	<!-- 복수 선택삭제시 삭제할 목록은 list -->
	<delete id="delete" parameterType="list">		
		DELETE
		FROM phones
		WEHRE num in
		<foreach collection="list" item="num" open="(" close=")" separator="," >
			#{num}
		</foreach>
	</delete>

	<!-- model, price, vcode를 수정의 대상으로 num에 해당하는 pk -->
	<update id="update" parameterType="phone">
		UPDATE phones
		SET model=#{model}, price=#{price}, vcode=#{vcode}
		WHERE num=#{num}
	</update>
</mapper>


