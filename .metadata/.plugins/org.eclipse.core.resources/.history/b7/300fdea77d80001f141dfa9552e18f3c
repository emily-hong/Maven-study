<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="UserMapper10">
	<resultMap type="user" id="UserSelectRM">
		<result property="userId" column="user_id"/>
		<result property="userName" column="user_name"/>
		<result property="password" column="password"/>
		<result property="age" column="age"/>
		<result property="grade" column="grade"/>
		<result property="regDate" column="reg_date"/>
	</resultMap>
	
	<!-- 반복되는 구문..uesr테이블에서 select 구문을 모듈화시킴 -> 아이디 지정하는 부분 중요(상세하게) -->
	<!-- select, insert, order by 같이 많이 쓰는 경우 처리 -->
	<sql id="select-users">
		SELECT
		user_id, user_name, password, age, grade, reg_date
		FROM users		
	</sql>
	<sql id="order-userid-desc">
		ORDER BY user_id DESC
	</sql>
	
	<!-- INSERT, DELETE, UPDATE 추가적으로 기입. -->
	<insert id="addUser" parameterType="user">
		INSERT 
		INTO users (user_id, user_name, password, age, grade, reg_date)
		VALUES(#{userId}, #{userName}, #{password}, #{age}, #{grade}, #{regDate})
	</insert>
	
	<update id="updateUser" parameterType="user">
		UPDATE users
		SET user_name=#{userName}
		WHERE user_id=#{userId}
	</update>
	
	<delete id="removeUser" parameterType="string">
		DELETE
		FROM users
		WHERE user_id=#{VALUE}
	</delete>
	
	<!-- 정적쿼리 :: 특정한 아이디를 가지는 사람을 검색 -->
	<select id="getUser" parameterType="string" resultMap="UserSelectRM">
		<include refid="select-users" />
		WHERE user_id=#{VALUE}
	</select>
	
	<!-- 동적쿼리 : 조건에 따라 다른 값이 들어가기 때문에 parameterType은 vo로 들어감 -->
	<select id="getUserList" parameterType="user" resultMap="UserSelectRM">
		<include refid="select-users" />
		<where>
			<if test="userName != null">
				user_name LIKE #{userName}
			</if>
			<if test="age != null">
				OR age LIKE #{age}
			</if>
		</where>
		<include refid="order-userid-desc" />
	</select>
</mapper>

